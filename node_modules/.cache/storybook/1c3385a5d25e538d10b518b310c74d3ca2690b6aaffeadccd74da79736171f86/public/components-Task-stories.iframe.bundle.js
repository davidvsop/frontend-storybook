"use strict";
(self["webpackChunkfrontend_storybook"] = self["webpackChunkfrontend_storybook"] || []).push([["components-Task-stories"],{

/***/ "./src/components/Task.stories.jsx":
/*!*****************************************!*\
  !*** ./src/components/Task.stories.jsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Archived: () => (/* binding */ Archived),
/* harmony export */   Default: () => (/* binding */ Default),
/* harmony export */   Pinned: () => (/* binding */ Pinned),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Task__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Task */ "./src/components/Task.jsx");
function _define_property(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _object_spread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys.forEach(function (key) {
      _define_property(target, key, source[key]);
    });
  }
  return target;
}
function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);
  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) {
      symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
    }
    keys.push.apply(keys, symbols);
  }
  return keys;
}
function _object_spread_props(target, source) {
  source = source != null ? source : {};
  if (Object.getOwnPropertyDescriptors) {
    Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
  } else {
    ownKeys(Object(source)).forEach(function (key) {
      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
    });
  }
  return target;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  component: _Task__WEBPACK_IMPORTED_MODULE_0__["default"],
  title: "Task",
  tags: ["autodocs"]
});
var Default = {
  args: {
    task: {
      id: "1",
      title: "Test Task",
      state: "TASK_INBOX"
    }
  }
};
var Pinned = {
  args: {
    task: _object_spread_props(_object_spread({}, Default.args.task), {
      state: "TASK_PINNED"
    })
  }
};
var Archived = {
  args: {
    task: _object_spread_props(_object_spread({}, Default.args.task), {
      state: "TASK_ARCHIVED"
    })
  }
};
Default.parameters = {
  ...Default.parameters,
  docs: {
    ...Default.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    task: {\n      id: '1',\n      title: 'Test Task',\n      state: 'TASK_INBOX'\n    }\n  }\n}",
      ...Default.parameters?.docs?.source
    }
  }
};
Pinned.parameters = {
  ...Pinned.parameters,
  docs: {
    ...Pinned.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    task: {\n      ...Default.args.task,\n      state: 'TASK_PINNED'\n    }\n  }\n}",
      ...Pinned.parameters?.docs?.source
    }
  }
};
Archived.parameters = {
  ...Archived.parameters,
  docs: {
    ...Archived.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    task: {\n      ...Default.args.task,\n      state: 'TASK_ARCHIVED'\n    }\n  }\n}",
      ...Archived.parameters?.docs?.source
    }
  }
};;const __namedExportsOrder = ["Default","Pinned","Archived"];

/***/ }),

/***/ "./src/components/Task.jsx":
/*!*********************************!*\
  !*** ./src/components/Task.jsx ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Task)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

function Task(param) {
    var _param_task = param.task, id = _param_task.id, title = _param_task.title, state = _param_task.state, onArchiveTask = param.onArchiveTask, onPinTask = param.onPinTask;
    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", {
        className: "list-item"
    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("label", {
        htmlFor: "title",
        "aria-label": title
    }, /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("input", {
        type: "text",
        value: title,
        readOnly: true,
        name: "title"
    })));
}
Task.__docgenInfo = {
    "description": "",
    "methods": [],
    "displayName": "Task"
};


/***/ })

}]);
//# sourceMappingURL=components-Task-stories.iframe.bundle.js.map